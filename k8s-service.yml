# En este archivo se encuentra la configuración del despliegue de la aplicación
# utilizando Kubernetes (K8s es su acronimo, lo vamos a usar para referirnos asi mas adelante).
# En cada punto especificaremos los elementos respectivos.

# Version del API de Kubernetes
apiVersion: apps/v1
# Tipo de elemento
kind: Deployment
# Metadatos del elemento
metadata:
  # Nombre
  name: aplicacion-entregas
  # Etiqueta del Deployment
  labels:
    app: aplicacion-entregas
# Especificaciones del elemento
spec:
  replicas: 1
  # K8s agrupa los elementos del Deployment y los interconecta entre si utilizando etiquetas
  # Aqui definimos como seleccionar los elementos juntos
  selector:
    # En este caso va a seleccionar aquellos que coincidan con el nombre del deploy
    matchLabels:
      app: aplicacion-entregas
  # En este elemento definimos la politica de actualizacion del despliegue
  # No esta al alcance de este laboratorio, pero invitamos al lector a consultar mas sobre
  # tecnicas de actualización de despliegues como Rolling Update y Blue/Green
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
    type: RollingUpdate        
  # En esta sección definimos el contenido del pod y declaramos los contenedores
  template:
    metadata:
      labels:
        # Esta es la etiqueta que se le asigna al pod, debe ser igual al selector (linea 24)
        app: aplicacion-entregas
    spec:
      # Declaracion de contenedores
      # name: Nombre del contenedor
      # image: Nombre de la imagen, por defecto buscara en Docker Hub o en el repositorio privado
      #        configurado en K8s
      containers:
        - name: proyecto-entrega1-monolito
          image: us-central1-docker.pkg.dev/miso-my-first-project-4301/proyecto-entrega1-monolito/proyecto-entrega1-monolito:1.0
          ports:
            - containerPort: 3000
          # Variables de entorno
          # Observe que estamos empleando el valor presente en el secreto, en el secreto debe estar configurada la URL de conexión a la base de datos
          env:
            - name: "APPLICATION_SECRETS"
              value: "/var/app-secrets/appsecrets.cfg"
            - name: "FLASK_PORT"
              value:  "3000"
          volumeMounts:
            - mountPath: "/var/app-secrets"
              name: appsecrets-volume
              readOnly: true
          # Realizar pull siempre a la imagen
          imagePullPolicy: Always
      volumes:
        - name: appsecrets-volume
          secret:
            secretName: appsecrets
            

# Vamos a especificar el balanceador de carga en este mismo archivo
# para ello vamos a crear otro documento separado, esto se hace con el operador "---"
---
kind: Service
apiVersion: v1
metadata:
  name: service-entregas
spec:
  type: LoadBalancer
  selector:
    app: aplicacion-entregas
  # Declaracion y redireccion del trafico por los puertos
  # En este caso, estamos ocupando el puerto 80 para la conexión HTTP
  # y lo estamos redirigiendo al 3000 de la red virtual del pod
  ports:
    - protocol: TCP
      port: 80
      targetPort: 3000